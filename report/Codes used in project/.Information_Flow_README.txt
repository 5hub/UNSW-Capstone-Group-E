The prupose of this text file is to explain the flow of information through the different segments of code and stages of our report.


Data Collection:
The initial collection of files supplied in our GitHub repository were:
	- forecastdemand_nsw.csv.zip.partaa
	- forecastdemand_nsw.csv.zip.partab
	- temperature_nsw.csv.zip
	- totaldemand_nsw.csv.zip

forecastdemand_nsw.csv.zip.partaa and forecastdemand_nsw.csv.zip.partab were required to be downloaded to a loacl machine due to their large size not beign supported by GitHub.

Forecast_File_Reduction.Rmd is a section of code used to merge and reduce the size of these two files in order for it to fit on GitHub. The output is a file 'forecastdemand_nsw_reduced.csv.gz'.


Data Cleaning:
Temperature_nsw.csv.zip and total_demand_nsw.csv.zip are used as inputs in Data_cleaning.Rmd.
This file verifies that our demand data is complete and entries occur every 30 minutes.
We then merge temperature data onto it and fix any missing values.
Output is Cleaned_Data.csv -- Check that our ML models use this as an input.

Cleaned_Data.csv and forecastdemand_nsw_reduced.csv.gz are used as inputs in Forecast_Cleaning.Rmd.
This file extracts forecasts made 30 minutes in advance and calcualtes it's MAe to be used as an evaluation metric across the project.
Output is Cleaned_Data_w_fcst.csv


Data Exploration:
Cleaned_Data.csv is used as an input in Data_Exploration.Rmd to conduct data exploration and highlight potential features of the models. 
Outputs are the graphs in Exploratory Data Analysis in the project.


Neural Network Code:
The Neural Network Models were developed using the python files. They are as below: - 
   1. config.py -> This config file allows us to use System GPU or CUDA. 
   2. Forecast_Demand_Main.py -> is the main file which call the pythion libraries and Trains the Neural Network. 
   3. energy_demand.py -> This python file has all the python functions/ classes defined which are called in "Forecast_Demand_Main.py"
   
   The Neural Network uses a file "training_dataset.csv" to train the model. This file is a subset of the Cleaned_Data.csv file. 
   
   The program is designed in such a way that different Neural Network Architectures can be dynamically selected with the 
   change of a global parameter "architecture". Can global variable "architecture" in energy_demand.py file can have values 4 values. (1,2,3 and 4)
   This architecture Value can be changed in order to change the Neural Network Architecture. Below are the details of the value
   When architecture = 1, Neural Network represents LSTM Network + 1 fully connected linear layer + Output Layer
   When architecture = 2, Neural Network represents LSTM Network + 2 Fully Connected linear Layer + Output Layer
   When architecture = 3, Neural Network represents represents GRU Network + 1 Fully Connected linear Layer + Output Layer
   When architecture = 4, Neural Network represents represents GRU Network + 2 Fully Connected linear Layer + Output Layer


Machine Learning Code:
Cleaned_Data.csv is used in ML_training.ipynb to conduct ML learning training
Output is conf_int_random_forest.csv with 90% CI data to be used to create model results graphs.
