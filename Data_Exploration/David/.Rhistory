plot(features$TOTALDEMAND, predict(fsmlm2))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
install.packages("2misc")
print(paste("MAD:", predict(fsmlm))
fsmlm <- lm(TOTALDEMAND ~ ., data = features)
fsmlm <- lm(TOTALDEMAND ~ ., data = features)
summary(fsmlm)
plot(fsmlm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm))))
print(paste("MAD:", predict(fsmlm)))
fsmlm <- lm(TOTALDEMAND ~ ., data = features)
summary(fsmlm)
plot(fsmlm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm))))
print(paste("MAD:", mad(predict(fsmlm))))
fsmlm <- lm(TOTALDEMAND ~ ., data = features)
summary(fsmlm)
plot(fsmlm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm))))
print(paste("MAD:", mad(features$TOTALDEMAND - predict(fsmlm))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
print(paste("MAD:", mad(features$TOTALDEMAND - predict(fsmlm2))))
# Import libraries
library(lubridate)
library(ggplot2)
library(dplyr)
library(hms)
library(Metrics)
# Import cleaned data
NSW_df <- read.csv("Cleaned_Data_w_fcst.csv")
NSW_df$DATETIME <- ymd_hms(NSW_df$DATETIME)
# Plot the temp and demand data per year
ggplot(NSW_df, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
geom_point() +
facet_wrap(~year(DATETIME))
# Plot the temp and demand data on a dual y axis against time to see any correlation.
ggplot(NSW_df, aes(x = DATETIME)) +
geom_line(aes(y = TEMPERATURE), colour = 'red') +
geom_line(aes(y = TOTALDEMAND/400), colour = 'blue') +
scale_y_continuous(name = 'Temperature', sec.axis = sec_axis(~.*400, name = 'Demand'))
# Plot the temp and demand data per year
ggplot(NSW_df, aes(x = DATETIME)) +
geom_line(aes(y = TEMPERATURE), colour = 'red') +
geom_line(aes(y = TOTALDEMAND/250), colour = 'blue') +
scale_y_continuous(name = 'Temperature', sec.axis = sec_axis(~.*250, name = 'Demand')) +
facet_wrap(~year(DATETIME), scales = 'free')
# Boxplot temp per month
ggplot(NSW_df, aes(x = month(DATETIME), y = TEMPERATURE, group = month(DATETIME))) + geom_boxplot() + xlim(0, 13)
# Boxplot demand per month
ggplot(NSW_df, aes(x = month(DATETIME), y = TOTALDEMAND, group = month(DATETIME))) + geom_boxplot() + xlim(0, 13)
# Calculate the absolute value of the difference between each temperature and the average temperature for that year.
NSW_df <- NSW_df %>%
mutate(Year = year(DATETIME)) %>%
group_by(Year) %>%
mutate(Temp_Fluctuation = abs(TEMPERATURE - mean(TEMPERATURE)))
# Plot
ggplot(NSW_df, aes(x = DATETIME)) +
geom_line(aes(y = Temp_Fluctuation), colour = 'red') +
geom_line(aes(y = TOTALDEMAND/250), colour = 'blue') +
scale_y_continuous(name = 'Temperature', sec.axis = sec_axis(~.*250, name = 'Demand')) +
facet_wrap(~year(DATETIME), scales = 'free')
# Plot demand against temperature fluctuation per year
ggplot(NSW_df, aes(x = Temp_Fluctuation, y = TOTALDEMAND)) +
geom_point() +
geom_smooth(method = lm) +
facet_wrap(~year(DATETIME))
# First linear model between temp and demand
lm1 <- lm(TOTALDEMAND ~ TEMPERATURE, data = NSW_df)
summary(lm1)
plot(lm1)
NSW_df$lm1_fcst <- predict(lm1)
NSW_df$lm1_res <- NSW_df$TOTALDEMAND - NSW_df$lm1_fcst
# A linear model between temp fluctuation away from the yearly average will likely fix the Residuals vs fitted graph
lm2 <- lm(TOTALDEMAND ~ Temp_Fluctuation, data = NSW_df)
summary(lm2)
plot(lm2)
NSW_df$lm2_fcst <- predict(lm2)
NSW_df$lm2_res <- NSW_df$TOTALDEMAND - NSW_df$lm2_fcst
## Boxplots
#boxplot(NSW_df$Diff1, NSW_df$Diff32, NSW_df$lm1_res, NSW_df$lm2_res)
# Caluculate five number summaries
fivenum(NSW_df$Fcst1_res)
fivenum(NSW_df$Fcst32_res)
fivenum(NSW_df$lm1_res)
fivenum(NSW_df$lm2_res)
# Calculate RSME
print(" ")
print("RSME")
sqrt(mean(NSW_df$Fcst1_res^2))
sqrt(mean(NSW_df$Fcst32_res^2))
sqrt(mean((NSW_df$lm1_res)^2))
sqrt(mean((NSW_df$lm2_res)^2))
# Calculate MAE
print(" ")
print("MAE")
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst1)
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst32)
mae(NSW_df$TOTALDEMAND, NSW_df$lm1_fcst)
mae(NSW_df$TOTALDEMAND, NSW_df$lm2_fcst)
## Boxplots
#boxplot(NSW_df$Diff1, NSW_df$Diff32, NSW_df$lm1_res, NSW_df$lm2_res)
# Caluculate five number summaries
fivenum(NSW_df$Fcst1_res)
fivenum(NSW_df$Fcst32_res)
fivenum(NSW_df$lm1_res)
fivenum(NSW_df$lm2_res)
# Calculate RSME
print(" ")
print("RSME")
sqrt(mean(NSW_df$Fcst1_res^2))
sqrt(mean(NSW_df$Fcst32_res^2))
sqrt(mean((NSW_df$lm1_res)^2))
sqrt(mean((NSW_df$lm2_res)^2))
# Calculate MAE
print(" ")
print("MAE")
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst1)
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst32)
mae(NSW_df$TOTALDEMAND, NSW_df$lm1_fcst)
mae(NSW_df$TOTALDEMAND, NSW_df$lm2_fcst)
# Calculate MAE
print(" ")
print("MAE")
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst1)
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst32)
mad(NSW_df$TOTALDEMAND - NSW_df$lm1_fcst)
mad(NSW_df$TOTALDEMAND - NSW_df$lm2_fcst)
## Boxplots
#boxplot(NSW_df$Diff1, NSW_df$Diff32, NSW_df$lm1_res, NSW_df$lm2_res)
# Caluculate five number summaries
fivenum(NSW_df$Fcst1_res)
fivenum(NSW_df$Fcst32_res)
fivenum(NSW_df$lm1_res)
fivenum(NSW_df$lm2_res)
# Calculate RSME
print(" ")
print("RSME")
sqrt(mean(NSW_df$Fcst1_res^2))
sqrt(mean(NSW_df$Fcst32_res^2))
sqrt(mean((NSW_df$lm1_res)^2))
sqrt(mean((NSW_df$lm2_res)^2))
# Calculate MAE
print(" ")
print("MAE")
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst1)
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst32)
mae(NSW_df$TOTALDEMAND, NSW_df$lm1_fcst)
mae(NSW_df$TOTALDEMAND, NSW_df$lm2_fcst)
# Calculate MAD
print(" ")
print("MAE")
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst1)
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst32)
mad(NSW_df$TOTALDEMAND - NSW_df$lm1_fcst)
mad(NSW_df$TOTALDEMAND - NSW_df$lm2_fcst)
## Boxplots
#boxplot(NSW_df$Diff1, NSW_df$Diff32, NSW_df$lm1_res, NSW_df$lm2_res)
# Caluculate five number summaries
fivenum(NSW_df$Fcst1_res)
fivenum(NSW_df$Fcst32_res)
fivenum(NSW_df$lm1_res)
fivenum(NSW_df$lm2_res)
# Calculate RSME
print(" ")
print("RSME")
sqrt(mean(NSW_df$Fcst1_res^2))
sqrt(mean(NSW_df$Fcst32_res^2))
sqrt(mean((NSW_df$lm1_res)^2))
sqrt(mean((NSW_df$lm2_res)^2))
# Calculate MAE
print(" ")
print("MAE")
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst1)
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst32)
mae(NSW_df$TOTALDEMAND, NSW_df$lm1_fcst)
mae(NSW_df$TOTALDEMAND, NSW_df$lm2_fcst)
# Calculate MAD
print(" ")
print("MAE")
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst1)
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst32)
mad(NSW_df$TOTALDEMAND - NSW_df$lm1_fcst)
mad(NSW_df$TOTALDEMAND - NSW_df$lm2_fcst)
## Boxplots
#boxplot(NSW_df$Diff1, NSW_df$Diff32, NSW_df$lm1_res, NSW_df$lm2_res)
# Caluculate five number summaries
fivenum(NSW_df$Fcst1_res)
fivenum(NSW_df$Fcst32_res)
fivenum(NSW_df$lm1_res)
fivenum(NSW_df$lm2_res)
# Calculate RSME
print(" ")
print("RSME")
sqrt(mean(NSW_df$Fcst1_res^2))
sqrt(mean(NSW_df$Fcst32_res^2))
sqrt(mean((NSW_df$lm1_res)^2))
sqrt(mean((NSW_df$lm2_res)^2))
# Calculate MAE
print(" ")
print("MAE")
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst1)
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst32)
mae(NSW_df$TOTALDEMAND, NSW_df$lm1_fcst)
mae(NSW_df$TOTALDEMAND, NSW_df$lm2_fcst)
# Calculate MAD
print(" ")
print("MAD")
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst1)
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst32)
mad(NSW_df$TOTALDEMAND - NSW_df$lm1_fcst)
mad(NSW_df$TOTALDEMAND - NSW_df$lm2_fcst)
features$change_in_demand <- features$TOTALDEMAND - features$dem_30
fslm <- lm(TOTALDEMAND ~ change_in_demand, data = features)
summary(fslm)
plot(fslm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fslm))))
print(paste("MAD:", mad(features$TOTALDEMAND - predict(fslm))))
fslm <- lm(change_in_demand ~ TEMPERATURE, data = features)
summary(fslm)
plot(fslm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fslm))))
print(paste("MAD:", mad(features$TOTALDEMAND - predict(fslm))))
library(Metrics)
# Plot the temp and demand data per year
ggplot(NSW_df, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
geom_point()
# Import libraries
library(lubridate)
library(ggplot2)
library(dplyr)
library(hms)
library(Metrics)
# Import cleaned data
NSW_df <- read.csv("Cleaned_Data_w_fcst.csv")
NSW_df$DATETIME <- ymd_hms(NSW_df$DATETIME)
# Plot the temp and demand data per year
ggplot(NSW_df, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
geom_point()
# Plot the temp and demand data per year
ggplot(NSW_df, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
ggtitle("Temperature vs Demand for 2015-2021") +
xlab('Temperature (deg celcius)') +
ylab('Demand (MW)') +
geom_point()
# Plot the temp and demand data per year
ggplot(NSW_df, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
ggtitle("Temperature vs Demand for 2015-2021") +
xlab('Temperature (deg celcius)') +
ylab('Demand (MW)') +
geom_point()
# Plot the temp and demand data per year
ggplot(NSW_df, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
ggtitle("Temperature vs Demand for 2010-2021") +
xlab('Temperature (deg celcius)') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = time(DATETIME), y = TEMPERATURE, group = time(DATETIME))) + geom_boxplot() + xlim(0, 13)
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = time(DATETIME), y = TEMPERATURE, group = time(DATETIME))) + geom_boxplot()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = time(DATETIME), y = TEMPERATURE, group = time(DATETIME)))
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = time(DATETIME), y = TEMPERATURE, group = time(DATETIME)))
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = time(DATETIME), y = TEMPERATURE, group = time(DATETIME))) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = time(DATETIME), y = TOTALDEMAND, group = time(DATETIME))) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = hms(DATETIME), y = TOTALDEMAND, group = hms(DATETIME))) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = hms(DATETIME), y = TOTALDEMAND\)) +
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = hms(DATETIME), y = TOTALDEMAND)) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = hms(DATETIME), y = TOTALDEMAND)) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
hms(DATETIME)
hms(NSW_df$DATETIME)
NSW_df$DATETIME <- ymd_hms(NSW_df$DATETIME)
# Import libraries
library(lubridate)
library(ggplot2)
library(dplyr)
library(hms)
library(Metrics)
# Import cleaned data
NSW_df <- read.csv("Cleaned_Data_w_fcst.csv")
NSW_df$DATETIME <- ymd_hms(NSW_df$DATETIME)
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = hms(DATETIME), y = TOTALDEMAND)) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = year(DATETIME), y = TOTALDEMAND)) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = as_hms(DATETIME), y = TOTALDEMAND)) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour\
ggplot(NSW_df, aes(x = as_hms(DATETIME), y = TOTALDEMAND)) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = wday(DATETIME), y = TOTALDEMAND)) +
ggtitle("Demand vs Day of Week") +
xlab('Day of Week') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = wday(DATETIME), y = TOTALDEMAND)) +
ggtitle("Demand vs Day of Week") +
xlab('Day of Week') +
ylab('Demand (MW)') +
geom_boxplot()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = wday(DATETIME), y = TOTALDEMAND, group = wday(DATETIME))) +
ggtitle("Demand vs Day of Week") +
xlab('Day of Week') +
ylab('Demand (MW)') +
geom_boxplot()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = as_hms(DATETIME), y = TOTALDEMAND, group = as_hms(DATETIME))) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = as_hms(DATETIME), y = TOTALDEMAND, group = as_hms(DATETIME))) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_boxplot()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = week(DATETIME), y = TOTALDEMAND, group = week(DATETIME))) +
ggtitle("Demand vs Week of Year") +
xlab('Day of Week') +
ylab('Demand (MW)') +
geom_boxplot()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = month(DATETIME), y = TOTALDEMAND, group = month(DATETIME))) +
ggtitle("Demand vs Month of Year") +
xlab('Month of Year') +
ylab('Demand (MW)') +
geom_boxplot()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = week(DATETIME), y = TOTALDEMAND, group = week(DATETIME))) +
ggtitle("Demand vs Week of Year") +
xlab('Week of Year') +
ylab('Demand (MW)') +
geom_boxplot()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = as_hms(DATETIME), y = TOTALDEMAND, group = as_hms(DATETIME))) +
ggtitle("Demand vs Time of Day") +
xlab('Time') +
ylab('Demand (MW)') +
geom_boxplot()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = wday(DATETIME), y = TOTALDEMAND, group = wday(DATETIME))) +
ggtitle("Demand vs Day of Week") +
xlab('Day of Week') +
ylab('Demand (MW)') +
geom_boxplot()
# This is for the report. Delete later
# Plot the temp and demand data per year
ggplot(NSW_df, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
ggtitle("Temperature vs Demand for 2010-2021") +
xlab('Temperature (deg celcius)') +
ylab('Demand (MW)') +
geom_point()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = week(DATETIME), y = TOTALDEMAND, group = week(DATETIME))) +
ggtitle("Demand vs Week of Year") +
xlab('Week of Year') +
ylab('Demand (MW)') +
geom_boxplot()
### This is to generate a graph for the report. Delete later
# Boxplot temp per hour
ggplot(NSW_df, aes(x = month(DATETIME), y = TOTALDEMAND, group = month(DATETIME))) +
ggtitle("Demand vs Month of Year") +
xlab('Month of Year') +
ylab('Demand (MW)') +
geom_boxplot()
# Import libraries
library(lubridate)
library(ggplot2)
library(dplyr)
library(hms)
library(Metrics)
library(corrplot)
# Import cleaned data
features <- read.csv("Cleaned_Data_mkII.csv")
features$DATETIME <- ymd_hms(features$DATETIME)
#Look at the relation between temp and demand per year to show the correlation.
ggplot(features, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
geom_point() +
facet_wrap(~year(DATETIME))
features$dem_30 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_30 = lag(dem_30, 1)) %>%
na.omit()
features$dem_60 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_60 = lag(dem_60, 2)) %>%
na.omit()
features$dem_90 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_90 = lag(dem_90, 3)) %>%
na.omit()
ggplot(features, aes(x = dem_30, y = TOTALDEMAND)) + geom_point()
ggplot(features, aes(x = dem_60, y = TOTALDEMAND)) + geom_point()
ggplot(features, aes(x = dem_90, y = TOTALDEMAND)) + geom_point()
#
lmd30 <- lm(TOTALDEMAND ~ dem_30, data = features)
summary(lmd30)
plot(lmd30)
# Import cleaned data
weather <- read.csv("weather.csv")
#features$DATETIME <- ymd_hms(features$DATETIME)
features$date <- date(features$DATETIME)
weather$date <- as.Date(with(weather, paste(Year, Month, Day, sep="-")), "%Y-%m-%d")
weather <- weather[, -c(1, 2, 3, 4, 5, 7, 8)]
# Do a left merge on dem and temp data
features <- left_join(features, weather, by = 'date')
features$day <- wday(features$DATETIME)
features$month <- month(features$DATETIME)
features$time <- as_hms(features$DATETIME)
M <- cor(features)
View(features)
features <- features[, -c(3, 4, 5, 6, 7, 8)]
M <- cor(features)
M <- cor(features)
features$time <- (hour(features$time)*60 + minute(features$time))/30
#features <- features[, -c(3, 7)]
M <- cor(features)
corrplot(M, method = "number")
features$Demand <- features$TOTALDEMAND
features$Temperature <- features$TEMPERATURE
features$Day <- features$day
features$Month <- features$month
features$Time <- features$time
features <- features[, -c(1,2,3,4,5)]
M <- cor(features)
corrplot(M, method = "number")
