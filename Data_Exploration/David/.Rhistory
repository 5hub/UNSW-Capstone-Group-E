library(corrplot)
# Import cleaned data
features <- read.csv("Cleaned_Data_mkII.csv")
features$DATETIME <- ymd_hms(features$DATETIME)
#Look at the relation between temp and demand per year to show the correlation.
ggplot(features, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
geom_point() +
facet_wrap(~year(DATETIME))
features$dem_30 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_30 = lag(dem_30, 1)) %>%
na.omit()
features$dem_60 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_60 = lag(dem_60, 2)) %>%
na.omit()
features$dem_90 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_90 = lag(dem_90, 3)) %>%
na.omit()
ggplot(features, aes(x = dem_30, y = TOTALDEMAND)) + geom_point() #, group = year(DATETIME)))
ggplot(features, aes(x = dem_60, y = TOTALDEMAND)) + geom_point() #, group = year(DATETIME)))
ggplot(features, aes(x = dem_90, y = TOTALDEMAND)) + geom_point() #, group = year(DATETIME)))
#
lmd30 <- lm(TOTALDEMAND ~ dem_30, data = features)
summary(lmd30)
plot(lmd30)
# Import cleaned data
weather <- read.csv("weather.csv")
#features$DATETIME <- ymd_hms(features$DATETIME)
features$date <- date(features$DATETIME)
weather$date <- as.Date(with(weather, paste(Year, Month, Day, sep="-")), "%Y-%m-%d")
weather <- weather[, -c(1, 2, 3, 4, 5, 7, 8)]
# Do a left merge on dem and temp data
cleaned_temp_dem_df <- left_join(features, weather, by = 'date')
View(cleaned_temp_dem_df)
# Import libraries
library(lubridate)
library(ggplot2)
library(dplyr)
library(hms)
library(Metrics)
library(corrplot)
# Import cleaned data
features <- read.csv("Cleaned_Data_mkII.csv")
features$DATETIME <- ymd_hms(features$DATETIME)
#Look at the relation between temp and demand per year to show the correlation.
ggplot(features, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
geom_point() +
facet_wrap(~year(DATETIME))
features$dem_30 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_30 = lag(dem_30, 1)) %>%
na.omit()
features$dem_60 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_60 = lag(dem_60, 2)) %>%
na.omit()
features$dem_90 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_90 = lag(dem_90, 3)) %>%
na.omit()
ggplot(features, aes(x = dem_30, y = TOTALDEMAND)) + geom_point()
ggplot(features, aes(x = dem_60, y = TOTALDEMAND)) + geom_point()
ggplot(features, aes(x = dem_90, y = TOTALDEMAND)) + geom_point()
#
lmd30 <- lm(TOTALDEMAND ~ dem_30, data = features)
summary(lmd30)
plot(lmd30)
# Import cleaned data
weather <- read.csv("weather.csv")
#features$DATETIME <- ymd_hms(features$DATETIME)
features$date <- date(features$DATETIME)
weather$date <- as.Date(with(weather, paste(Year, Month, Day, sep="-")), "%Y-%m-%d")
weather <- weather[, -c(1, 2, 3, 4, 5, 7, 8)]
# Do a left merge on dem and temp data
features <- left_join(features, weather, by = 'date')
features$day <- wday(features$DATETIME)
features$month <- month(features$DATETIME)
features$time <- as_hms(features$DATETIME)
features$temp_30 <- features$TEMPERATURE
features <- features %>%
mutate(temp_30 = lag(temp_30, 1)) %>%
na.omit()
features$temp_60 <- features$TEMPERATURE
features <- features %>%
mutate(temp_60 = lag(temp_60, 2)) %>%
na.omit()
features$temp_90 <- features$TEMPERATURE
features <- features %>%
mutate(temp_90 = lag(temp_90, 3)) %>%
na.omit()
features$time <- (hour(features$time)*60 + minute(features$time))/30
features <- features[, -3]
M <- cor(features)
# Import libraries
library(lubridate)
library(ggplot2)
library(dplyr)
library(hms)
library(Metrics)
library(corrplot)
# Import cleaned data
features <- read.csv("Cleaned_Data_mkII.csv")
features$DATETIME <- ymd_hms(features$DATETIME)
#Look at the relation between temp and demand per year to show the correlation.
ggplot(features, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
geom_point() +
facet_wrap(~year(DATETIME))
features$dem_30 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_30 = lag(dem_30, 1)) %>%
na.omit()
features$dem_60 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_60 = lag(dem_60, 2)) %>%
na.omit()
features$dem_90 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_90 = lag(dem_90, 3)) %>%
na.omit()
ggplot(features, aes(x = dem_30, y = TOTALDEMAND)) + geom_point()
ggplot(features, aes(x = dem_60, y = TOTALDEMAND)) + geom_point()
ggplot(features, aes(x = dem_90, y = TOTALDEMAND)) + geom_point()
#
lmd30 <- lm(TOTALDEMAND ~ dem_30, data = features)
summary(lmd30)
plot(lmd30)
# Import cleaned data
weather <- read.csv("weather.csv")
#features$DATETIME <- ymd_hms(features$DATETIME)
features$date <- date(features$DATETIME)
weather$date <- as.Date(with(weather, paste(Year, Month, Day, sep="-")), "%Y-%m-%d")
weather <- weather[, -c(1, 2, 3, 4, 5, 7, 8)]
# Do a left merge on dem and temp data
features <- left_join(features, weather, by = 'date')
features$day <- wday(features$DATETIME)
features$month <- month(features$DATETIME)
features$time <- as_hms(features$DATETIME)
features$temp_30 <- features$TEMPERATURE
features <- features %>%
mutate(temp_30 = lag(temp_30, 1)) %>%
na.omit()
features$temp_60 <- features$TEMPERATURE
features <- features %>%
mutate(temp_60 = lag(temp_60, 2)) %>%
na.omit()
features$temp_90 <- features$TEMPERATURE
features <- features %>%
mutate(temp_90 = lag(temp_90, 3)) %>%
na.omit()
features$time <- (hour(features$time)*60 + minute(features$time))/30
features <- features[, -c(3, 7)]
M <- cor(features)
corrplot(M, method = "number")
fsmlm <- lm(TOTALDEMAND ~ ., data = features)
summary(fsmlm)
plot(fsmlm)
# Import libraries
library(lubridate)
library(ggplot2)
library(dplyr)
library(hms)
library(Metrics)
library(corrplot)
# Import cleaned data
features <- read.csv("Cleaned_Data_mkII.csv")
features$DATETIME <- ymd_hms(features$DATETIME)
#Look at the relation between temp and demand per year to show the correlation.
ggplot(features, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
geom_point() +
facet_wrap(~year(DATETIME))
features$dem_30 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_30 = lag(dem_30, 1)) %>%
na.omit()
features$dem_60 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_60 = lag(dem_60, 2)) %>%
na.omit()
features$dem_90 <- features$TOTALDEMAND
features <- features %>%
mutate(dem_90 = lag(dem_90, 3)) %>%
na.omit()
ggplot(features, aes(x = dem_30, y = TOTALDEMAND)) + geom_point()
ggplot(features, aes(x = dem_60, y = TOTALDEMAND)) + geom_point()
ggplot(features, aes(x = dem_90, y = TOTALDEMAND)) + geom_point()
#
lmd30 <- lm(TOTALDEMAND ~ dem_30, data = features)
summary(lmd30)
plot(lmd30)
# Import cleaned data
weather <- read.csv("weather.csv")
#features$DATETIME <- ymd_hms(features$DATETIME)
features$date <- date(features$DATETIME)
weather$date <- as.Date(with(weather, paste(Year, Month, Day, sep="-")), "%Y-%m-%d")
weather <- weather[, -c(1, 2, 3, 4, 5, 7, 8)]
# Do a left merge on dem and temp data
features <- left_join(features, weather, by = 'date')
features$day <- wday(features$DATETIME)
features$month <- month(features$DATETIME)
features$time <- as_hms(features$DATETIME)
features$temp_30 <- features$TEMPERATURE
features <- features %>%
mutate(temp_30 = lag(temp_30, 1)) %>%
na.omit()
features$temp_60 <- features$TEMPERATURE
features <- features %>%
mutate(temp_60 = lag(temp_60, 2)) %>%
na.omit()
features$temp_90 <- features$TEMPERATURE
features <- features %>%
mutate(temp_90 = lag(temp_90, 3)) %>%
na.omit()
features$time <- (hour(features$time)*60 + minute(features$time))/30
#features <- features[, -c(3, 7)]
View(features)
features <- features[, -c(3, 7)]
M <- cor(features)
corrplot(M, method = "number")
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 +, data = features)
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30, data = features)
summary(fsmlm2)
plot(fsmlm2)
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30, data = features)
summary(fsmlm2)
plot(fsmlm2)
mae(features$TOTALDEMAND, predict(fsmlm2))
print("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2)))
print("MAE:" + mae(features$TOTALDEMAND, predict(fsmlm2)))
print("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2)))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm <- lm(TOTALDEMAND ~ ., data = features)
summary(fsmlm)
plot(fsmlm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + temp_60 + dem_30 + day + time, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + day + time, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60 + day + time, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60 + time, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60 + time, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm2 <- lm(TOTALDEMAND ~ dem_30 + dem_60, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
plot(predict(fsmlm2))
plot(features$TOTALDEMAND, predict(fsmlm2))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
install.packages("2misc")
print(paste("MAD:", predict(fsmlm))
fsmlm <- lm(TOTALDEMAND ~ ., data = features)
fsmlm <- lm(TOTALDEMAND ~ ., data = features)
summary(fsmlm)
plot(fsmlm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm))))
print(paste("MAD:", predict(fsmlm)))
fsmlm <- lm(TOTALDEMAND ~ ., data = features)
summary(fsmlm)
plot(fsmlm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm))))
print(paste("MAD:", mad(predict(fsmlm))))
fsmlm <- lm(TOTALDEMAND ~ ., data = features)
summary(fsmlm)
plot(fsmlm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm))))
print(paste("MAD:", mad(features$TOTALDEMAND - predict(fsmlm))))
fsmlm2 <- lm(TOTALDEMAND ~ temp_30 + dem_30 + dem_60, data = features)
summary(fsmlm2)
plot(fsmlm2)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fsmlm2))))
print(paste("MAD:", mad(features$TOTALDEMAND - predict(fsmlm2))))
# Import libraries
library(lubridate)
library(ggplot2)
library(dplyr)
library(hms)
library(Metrics)
# Import cleaned data
NSW_df <- read.csv("Cleaned_Data_w_fcst.csv")
NSW_df$DATETIME <- ymd_hms(NSW_df$DATETIME)
# Plot the temp and demand data per year
ggplot(NSW_df, aes(x = TEMPERATURE, y = TOTALDEMAND)) +
geom_point() +
facet_wrap(~year(DATETIME))
# Plot the temp and demand data on a dual y axis against time to see any correlation.
ggplot(NSW_df, aes(x = DATETIME)) +
geom_line(aes(y = TEMPERATURE), colour = 'red') +
geom_line(aes(y = TOTALDEMAND/400), colour = 'blue') +
scale_y_continuous(name = 'Temperature', sec.axis = sec_axis(~.*400, name = 'Demand'))
# Plot the temp and demand data per year
ggplot(NSW_df, aes(x = DATETIME)) +
geom_line(aes(y = TEMPERATURE), colour = 'red') +
geom_line(aes(y = TOTALDEMAND/250), colour = 'blue') +
scale_y_continuous(name = 'Temperature', sec.axis = sec_axis(~.*250, name = 'Demand')) +
facet_wrap(~year(DATETIME), scales = 'free')
# Boxplot temp per month
ggplot(NSW_df, aes(x = month(DATETIME), y = TEMPERATURE, group = month(DATETIME))) + geom_boxplot() + xlim(0, 13)
# Boxplot demand per month
ggplot(NSW_df, aes(x = month(DATETIME), y = TOTALDEMAND, group = month(DATETIME))) + geom_boxplot() + xlim(0, 13)
# Calculate the absolute value of the difference between each temperature and the average temperature for that year.
NSW_df <- NSW_df %>%
mutate(Year = year(DATETIME)) %>%
group_by(Year) %>%
mutate(Temp_Fluctuation = abs(TEMPERATURE - mean(TEMPERATURE)))
# Plot
ggplot(NSW_df, aes(x = DATETIME)) +
geom_line(aes(y = Temp_Fluctuation), colour = 'red') +
geom_line(aes(y = TOTALDEMAND/250), colour = 'blue') +
scale_y_continuous(name = 'Temperature', sec.axis = sec_axis(~.*250, name = 'Demand')) +
facet_wrap(~year(DATETIME), scales = 'free')
# Plot demand against temperature fluctuation per year
ggplot(NSW_df, aes(x = Temp_Fluctuation, y = TOTALDEMAND)) +
geom_point() +
geom_smooth(method = lm) +
facet_wrap(~year(DATETIME))
# First linear model between temp and demand
lm1 <- lm(TOTALDEMAND ~ TEMPERATURE, data = NSW_df)
summary(lm1)
plot(lm1)
NSW_df$lm1_fcst <- predict(lm1)
NSW_df$lm1_res <- NSW_df$TOTALDEMAND - NSW_df$lm1_fcst
# A linear model between temp fluctuation away from the yearly average will likely fix the Residuals vs fitted graph
lm2 <- lm(TOTALDEMAND ~ Temp_Fluctuation, data = NSW_df)
summary(lm2)
plot(lm2)
NSW_df$lm2_fcst <- predict(lm2)
NSW_df$lm2_res <- NSW_df$TOTALDEMAND - NSW_df$lm2_fcst
## Boxplots
#boxplot(NSW_df$Diff1, NSW_df$Diff32, NSW_df$lm1_res, NSW_df$lm2_res)
# Caluculate five number summaries
fivenum(NSW_df$Fcst1_res)
fivenum(NSW_df$Fcst32_res)
fivenum(NSW_df$lm1_res)
fivenum(NSW_df$lm2_res)
# Calculate RSME
print(" ")
print("RSME")
sqrt(mean(NSW_df$Fcst1_res^2))
sqrt(mean(NSW_df$Fcst32_res^2))
sqrt(mean((NSW_df$lm1_res)^2))
sqrt(mean((NSW_df$lm2_res)^2))
# Calculate MAE
print(" ")
print("MAE")
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst1)
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst32)
mae(NSW_df$TOTALDEMAND, NSW_df$lm1_fcst)
mae(NSW_df$TOTALDEMAND, NSW_df$lm2_fcst)
## Boxplots
#boxplot(NSW_df$Diff1, NSW_df$Diff32, NSW_df$lm1_res, NSW_df$lm2_res)
# Caluculate five number summaries
fivenum(NSW_df$Fcst1_res)
fivenum(NSW_df$Fcst32_res)
fivenum(NSW_df$lm1_res)
fivenum(NSW_df$lm2_res)
# Calculate RSME
print(" ")
print("RSME")
sqrt(mean(NSW_df$Fcst1_res^2))
sqrt(mean(NSW_df$Fcst32_res^2))
sqrt(mean((NSW_df$lm1_res)^2))
sqrt(mean((NSW_df$lm2_res)^2))
# Calculate MAE
print(" ")
print("MAE")
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst1)
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst32)
mae(NSW_df$TOTALDEMAND, NSW_df$lm1_fcst)
mae(NSW_df$TOTALDEMAND, NSW_df$lm2_fcst)
# Calculate MAE
print(" ")
print("MAE")
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst1)
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst32)
mad(NSW_df$TOTALDEMAND - NSW_df$lm1_fcst)
mad(NSW_df$TOTALDEMAND - NSW_df$lm2_fcst)
## Boxplots
#boxplot(NSW_df$Diff1, NSW_df$Diff32, NSW_df$lm1_res, NSW_df$lm2_res)
# Caluculate five number summaries
fivenum(NSW_df$Fcst1_res)
fivenum(NSW_df$Fcst32_res)
fivenum(NSW_df$lm1_res)
fivenum(NSW_df$lm2_res)
# Calculate RSME
print(" ")
print("RSME")
sqrt(mean(NSW_df$Fcst1_res^2))
sqrt(mean(NSW_df$Fcst32_res^2))
sqrt(mean((NSW_df$lm1_res)^2))
sqrt(mean((NSW_df$lm2_res)^2))
# Calculate MAE
print(" ")
print("MAE")
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst1)
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst32)
mae(NSW_df$TOTALDEMAND, NSW_df$lm1_fcst)
mae(NSW_df$TOTALDEMAND, NSW_df$lm2_fcst)
# Calculate MAD
print(" ")
print("MAE")
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst1)
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst32)
mad(NSW_df$TOTALDEMAND - NSW_df$lm1_fcst)
mad(NSW_df$TOTALDEMAND - NSW_df$lm2_fcst)
## Boxplots
#boxplot(NSW_df$Diff1, NSW_df$Diff32, NSW_df$lm1_res, NSW_df$lm2_res)
# Caluculate five number summaries
fivenum(NSW_df$Fcst1_res)
fivenum(NSW_df$Fcst32_res)
fivenum(NSW_df$lm1_res)
fivenum(NSW_df$lm2_res)
# Calculate RSME
print(" ")
print("RSME")
sqrt(mean(NSW_df$Fcst1_res^2))
sqrt(mean(NSW_df$Fcst32_res^2))
sqrt(mean((NSW_df$lm1_res)^2))
sqrt(mean((NSW_df$lm2_res)^2))
# Calculate MAE
print(" ")
print("MAE")
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst1)
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst32)
mae(NSW_df$TOTALDEMAND, NSW_df$lm1_fcst)
mae(NSW_df$TOTALDEMAND, NSW_df$lm2_fcst)
# Calculate MAD
print(" ")
print("MAE")
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst1)
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst32)
mad(NSW_df$TOTALDEMAND - NSW_df$lm1_fcst)
mad(NSW_df$TOTALDEMAND - NSW_df$lm2_fcst)
## Boxplots
#boxplot(NSW_df$Diff1, NSW_df$Diff32, NSW_df$lm1_res, NSW_df$lm2_res)
# Caluculate five number summaries
fivenum(NSW_df$Fcst1_res)
fivenum(NSW_df$Fcst32_res)
fivenum(NSW_df$lm1_res)
fivenum(NSW_df$lm2_res)
# Calculate RSME
print(" ")
print("RSME")
sqrt(mean(NSW_df$Fcst1_res^2))
sqrt(mean(NSW_df$Fcst32_res^2))
sqrt(mean((NSW_df$lm1_res)^2))
sqrt(mean((NSW_df$lm2_res)^2))
# Calculate MAE
print(" ")
print("MAE")
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst1)
mae(NSW_df$TOTALDEMAND, NSW_df$Fcst32)
mae(NSW_df$TOTALDEMAND, NSW_df$lm1_fcst)
mae(NSW_df$TOTALDEMAND, NSW_df$lm2_fcst)
# Calculate MAD
print(" ")
print("MAD")
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst1)
mad(NSW_df$TOTALDEMAND - NSW_df$Fcst32)
mad(NSW_df$TOTALDEMAND - NSW_df$lm1_fcst)
mad(NSW_df$TOTALDEMAND - NSW_df$lm2_fcst)
features$change_in_demand <- features$TOTALDEMAND - features$dem_30
fslm <- lm(TOTALDEMAND ~ change_in_demand, data = features)
summary(fslm)
plot(fslm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fslm))))
print(paste("MAD:", mad(features$TOTALDEMAND - predict(fslm))))
fslm <- lm(change_in_demand ~ TEMPERATURE, data = features)
summary(fslm)
plot(fslm)
print(paste("MAE:", mae(features$TOTALDEMAND, predict(fslm))))
print(paste("MAD:", mad(features$TOTALDEMAND - predict(fslm))))
