# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import forecast dataset
fcst_nsw <- read.csv(unz('/forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
setwd('../David/')
# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
setwd('../David/')
# Import temperature and demand datasets
setwd('../')
# Import temperature and demand datasets
setwd('../David/')
v
# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
setwd('../David/')
# Import temperature and demand datasets
setwd('../David/')
# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
setwd('../David')
# Import temperature and demand datasets
setwd('../David')
# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
setwd('../David')
# Import forecast dataset
fcst_nsw <- read.csv(unz('/forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
setwd('../David/')
# Import forecast dataset
fcst_nsw <- read.csv(unz('/forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
setwd('../')
# Import forecast dataset
fcst_nsw <- read.csv(unz('David/forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
setwd('../')
# Import temperature and demand datasets
setwd('../')
# Import forecast dataset
fcst_nsw <- read.csv(unz('David/forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
setwd('../')
# Import forecast dataset
fcst_nsw <- read.csv(unz('David/forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
setwd('../')
# Import temperature and demand datasets
setwd('../David/')
# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import temperature and demand datasets
#setwd('../David/')
# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import libraries
library(lubridate)
#library(readr)
library(car)
library(ggplot2)
library(tidyverse)
library(dplyr)
# Import temperature and demand datasets
#setwd('../David/')
# Import forecast dataset
fcst_nsw <- read.csv(unz('forecastdemand_nsw_reduced.csv.zip', 'forecastdemand_nsw_reduced.csv'), header = T)
# Import libraries
#library(e1071)
#library()
#
#library(lubridate)
#library(readr)
#library(car)
#library(ggplot2)
#library(dplyr)
#library(data.table)
#library(R.utils)
#library(hms)
#library(NLP)
#library(splines)
#library(gam)
#library(mgcv)
#library(forecast)
#library(neuralnet)
#library(caTools)
#library(keras)
#
install.packages('keras')
install.packages('tensorflow')
install.packages('devtools')
library(devtools)
library(tensorflow)
Sys.setenv(RETICULATE_PYTHON = "C:/ProgramData/Anaconda3/python.exe")
library(reticulate)
install_tensorflow()
install.packages('evaluate')
install.packages("xfun")
#write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
install.packages("jsonlite", type = "source")
# Import libraries
#library(e1071)
#library()
#
#library(lubridate)
#library(readr)
#library(car)
#library(ggplot2)
#library(dplyr)
#library(data.table)
#library(R.utils)
#library(hms)
#library(NLP)
#library(splines)
#library(gam)
#library(mgcv)
#library(forecast)
#library(neuralnet)
#library(caTools)
#library(keras)
#
#install.packages('keras')
#install.packages('tensorflow')
#install.packages('devtools')
library(devtools)
devtools::install_github("rstudio/keras", dependencies = TRUE)
devtools::install_github("rstudio/tensorflow", dependencies = TRUE)
install_keras()
library(tensorflow)
#Sys.setenv(RETICULATE_PYTHON = "C:/ProgramData/Anaconda3/python.exe")
#library(reticulate)
install_tensorflow()
#Sys.setenv(RETICULATE_PYTHON = "C:/ProgramData/Anaconda3/python.exe")
#library(reticulate)
install_tensorflow(method = "conda")
#Sys.setenv(RETICULATE_PYTHON = "C:/ProgramData/Anaconda3/python.exe")
#library(reticulate)
install_tensorflow(method = "auto")
# Import libraries
#library(e1071)
#library()
#
#library(lubridate)
#library(readr)
#library(car)
#library(ggplot2)
#library(dplyr)
#library(data.table)
#library(R.utils)
#library(hms)
#library(NLP)
#library(splines)
#library(gam)
#library(mgcv)
#library(forecast)
#library(neuralnet)
#library(caTools)
#library(keras)
#
install.packages('keras')
install.packages('tensorflow')
install.packages('devtools')
library(devtools)
devtools::install_github("rstudio/keras", dependencies = TRUE)
install.packages("devtools")
# Import libraries
#library(e1071)
#library()
#
#library(lubridate)
#library(readr)
#library(car)
#library(ggplot2)
#library(dplyr)
#library(data.table)
#library(R.utils)
#library(hms)
#library(NLP)
#library(splines)
#library(gam)
#library(mgcv)
#library(forecast)
#library(neuralnet)
#library(caTools)
#library(keras)
#
install.packages('keras')
install.packages('tensorflow')
install.packages('devtools')
library(devtools)
devtools::install_github("rstudio/keras", dependencies = TRUE)
devtools::install_github("rstudio/tensorflow", dependencies = TRUE)
#install_keras()
#install_tensorflow()
library(keras)
library(tensorflow)
#Sys.setenv(RETICULATE_PYTHON = "C:/ProgramData/Anaconda3/python.exe")
#library(reticulate)
install_tensorflow(method = "auto")
# Import libraries
#library(e1071)
#library()
#
#library(lubridate)
#library(readr)
#library(car)
#library(ggplot2)
#library(dplyr)
#library(data.table)
#library(R.utils)
#library(hms)
#library(NLP)
#library(splines)
#library(gam)
#library(mgcv)
#library(forecast)
#library(neuralnet)
#library(caTools)
#library(keras)
#
#install.packages('keras')
#install.packages('tensorflow')
#install.packages('devtools')
library(devtools)
#devtools::install_github("rstudio/keras", dependencies = TRUE)
#devtools::install_github("rstudio/tensorflow", dependencies = TRUE)
#install_keras()
#install_tensorflow()
library(keras)
library(tensorflow)
#Sys.setenv(RETICULATE_PYTHON = "C:/ProgramData/Anaconda3/python.exe")
#library(reticulate)
install_keras()
